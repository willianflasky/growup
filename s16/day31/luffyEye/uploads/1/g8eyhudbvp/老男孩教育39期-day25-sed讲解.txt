=============================================================================================
# 老男孩教育：                                                                            #
# www.oldboyedu.com                                                                       #
# 邮件：miaokm@oldboyedu.com(189 1048 1057)                                               #
# 地址：北京市昌平区顺沙路8号院汇德商厦4F                                                 #
# 资源老师   手机电话：		    QQ号码        资源老师： 手机电话：		    QQ号码        #
# 飞雪		 135 5261 2571		80042789      小雨		 186 0046 2391      390320151     #
# 歪歪		 189 1171 8229		70271111      丹丹		 158 1059 0206      41117397      #
# 冰冰		 150 1078 5220		41117483												  #
=============================================================================================



sed  增加 修改 查找 删除  增删改查



Sed命令介绍及语法格式

Sed命令执行流程

#查 
Sed单行查询
Sed多行查询（地址范围）
Sed过滤功能

#增
Sed单行增加
Sed多行增加
Sed增加案例

#删
Sed删除功能及案例

#改
Sed文本替换
Sed变量替换
Sed反向引用
Sed替换案例
Sed执行多条语句
获取文件行号



1. sed语法格式

sed [选项] [sed指令] [输入文件]

2. sed命令执行流程


3. 创建测试文件
cat>person.txt<<EOF
101,oldboy,CEO
102,zhangyao,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO
EOF

EOF ==>end of file

4. 查询单行文本

p  sed指定，打印模式空间内容
-n sed选项，取消默认输出

[root@oldboyedu38-nb ~]# sed '1p' person.txt 
101,oldboy,CEO
101,oldboy,CEO
102,zhangyao,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO
[root@oldboyedu38-nb ~]# sed -n '1p' person.txt 
101,oldboy,CEO
[root@oldboyedu38-nb ~]# sed -n '3p' person.txt 
103,Alex,COO

5.查询连续多行文本

指定p前面没有地址范围，那么默认匹配所有行

数字地址范围--推荐
# 2,4  显示第2行到第4行的内容，包含第2行和第4行

[root@oldboyedu38-nb ~]# sed -n '2,4p' person.txt 
102,zhangyao,CTO
103,Alex,COO
104,yy,CFO

正则地址范围-模糊，容易找多了
[root@oldboyedu38-nb ~]# sed -n '/oldboy/p' person.txt 
101,oldboy,CEO
[root@oldboyedu38-nb ~]# sed -n '/o.*y/p' person.txt 
101,oldboy,CEO
[root@oldboyedu38-nb ~]# sed -n '/o.*y/,/105/p' person.txt 
101,oldboy,CEO
102,zhangyao,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO


6. 过滤多个字符串
-r  sed选项，支持扩展正则表达式（|、()）

默认情况，sed只支持基本正则表达式。

[root@oldboyedu38-nb ~]# sed -n '/oldboy/p' person.txt 
101,oldboy,CEO
[root@oldboyedu38-nb ~]# egrep 'oldboy|yy' person.txt   ==egrep ==grep -E
101,oldboy,CEO
104,yy,CFO
[root@oldboyedu38-nb ~]# sed -rn '/oldboy|yy/p' person.txt 
101,oldboy,CEO
104,yy,CFO

sed里面的正则字符左右必须有“/”。/oldboy/


重点：
sed 查询单行文本
查询多行文本  使用数字地址范围  sed -n '2,4p' person.txt 


7. 查询指定多行
使用分号
[root@oldboyedu38-nb ~]# sed -n '2p;4p' person.txt 
102,zhangyao,CTO
104,yy,CFO
[root@oldboyedu38-nb ~]# sed -n '2p;4p;10p;30p' person.txt 


8.增加单行文本
a 追加append，在指定行后添加一行或多行文本
i 插入insert，在指定行前添加一行或多行文本

[root@oldboyedu38-nb ~]# sed '2a 106,xiaoyu,CXO' person.txt 
101,oldboy,CEO
102,zhangyao,CTO
106,xiaoyu,CXO
103,Alex,COO
104,yy,CFO
105,feixue,CIO
[root@oldboyedu38-nb ~]# sed '2i 106,xiaoyu,CXO' person.txt 
101,oldboy,CEO
106,xiaoyu,CXO
102,zhangyao,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO


9、增加多行文本
\n 表示换行符

106,xiaoyu,CXO\n107\n108\n109

[root@oldboyedu38-nb ~]# sed '2a 106,xiaoyu,CXO\n107\n108\n109' person.txt 
101,oldboy,CEO
102,zhangyao,CTO
106,xiaoyu,CXO
107
108
109
103,Alex,COO
104,yy,CFO
105,feixue,CIO

案例1：
测试文件准备
cp /etc/ssh/sshd_config .

使用sed增加5行文本到当前目录的sshd_config第13行前？

Port 52113
PermitRootLogin no
PermitEmptyPasswords no
UseDNS no
GSSAPIAuthentication no


①13i
②Port 52113\nPermitRootLogin no\nPermitEmptyPasswords no\nUseDNS no\nGSSAPIAuthentication no
③-i sed选项，能够将修改数据写入磁盘

sed -i '13i Port 52113\npermitRootLogin no\nPermitEmptyPasswords no\nUseDNS no\nGSSAPIAuthentication' sshd_config


10. 删除文件内容
d sed指令，删除文本内容
$ 代表文件的最后一行


[root@oldboyedu38-nb ~]# sed '2d' person.txt   # 删除单行
101,oldboy,CEO
103,Alex,COO
104,yy,CFO
105,feixue,CIO
[root@oldboyedu38-nb ~]# sed '2,5d' person.txt # 删除多行
101,oldboy,CEO
[root@oldboyedu38-nb ~]# sed '2,$d' person.txt 
101,oldboy,CEO


11.文本替换

s/o/A/g
s/\/usr\/local/\/etc\/sysconfig\//g
s#/usr/local/#/etc/sysconfig#g

s 单独使用→将每一行中第一处匹配的字符串进行替换
g 每一行进行全部替换→sed指令s的替换标志之一(全局替换)

[root@oldboyedu38-nb ~]# sed 's#o#A#' person.txt 
101,Aldboy,CEO
102,zhangyaA,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO
[root@oldboyedu38-nb ~]# sed 's#o#A#g' person.txt 
101,AldbAy,CEO
102,zhangyaA,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO


-i自动备份功能

[root@oldboyedu38-nb ~]# sed -i.bak 's#o#A#g' person.txt 
[root@oldboyedu38-nb ~]# cat person.txt
101,AldbAy,CEO
102,zhangyaA,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO
[root@oldboyedu38-nb ~]# cat person.txt.bak 
101,oldboy,CEO
102,zhangyao,CTO
103,Alex,COO
104,yy,CFO
105,feixue,CIO

12. Ms# # #Ng的使用

cat >num.txt <<EOF
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
EOF


[root@oldboyedu38-nb ~]# sed 's#1#0#g' num.txt 
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
[root@oldboyedu38-nb ~]# sed '3s#1#0#g' num.txt 
1 1 1 1 1
1 1 1 1 1
0 0 0 0 0
1 1 1 1 1
[root@oldboyedu38-nb ~]# sed '3,4s#1#0#g' num.txt 
1 1 1 1 1
1 1 1 1 1
0 0 0 0 0
0 0 0 0 0
[root@oldboyedu38-nb ~]# sed '3s#1#0#3g' num.txt 
1 1 1 1 1
1 1 1 1 1
1 1 0 0 0
1 1 1 1 1
[root@oldboyedu38-nb ~]# 
[root@oldboyedu38-nb ~]# sed '3s#1#0#2g' num.txt 
1 1 1 1 1
1 1 1 1 1
1 0 0 0 0
1 1 1 1 1
[root@oldboyedu38-nb ~]# sed 's#1#0#2g' num.txt 
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0


13.变量替换

主要考察单引号、双引号的区别

[root@oldboyedu38-nb ~]# x=1
[root@oldboyedu38-nb ~]# y=2
[root@oldboyedu38-nb ~]# sed 's#$x#$y#g' num.txt 
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
[root@oldboyedu38-nb ~]# sed "s#$x#$y#g" num.txt 
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
[root@oldboyedu38-nb ~]# sed "s#1#2#g" num.txt 
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
[root@oldboyedu38-nb ~]# sed s#$x#$y#g num.txt 
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
[root@oldboyedu38-nb ~]# sed 's#'$x'#'$y'#g' num.txt 
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2


14. 反向引用

()  扩展正则表达式  在sed中作用，能够记忆它包含的一段正则表达式，并可以通过\1 \2 \3 ... \9 调取出来

sed -r  '()'


15. 企业案例：系统开机启动项优化

除了下面5个服务以外都关闭
crond sshd network sysstat rsyslog


chkconfig --list|grep 3:on|sed -r 's#(.*).*0.*#\1#'|egrep -v 'crond|sshd|network|sysstat|rsyslog'|sed -r 's#(.*)#chkconfig \1 off#'|bash


总结：
掌握sed选项
  -n
  -r
  -i

掌握sed指令
  p
  a
  i
  d
  s     ==》g




  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
创建Shell脚本
执行Shell脚本
什么是变量
变量的分类
变量的定义
条件表达式
if语句
for语句
case语句和while语句
